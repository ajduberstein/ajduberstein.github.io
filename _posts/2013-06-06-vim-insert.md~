---
layout: page
title : Vim Insert Mode
category : Tools of the Trade
tagline: "A 'best of' list"
image: http://vimgolf.com/images/vim_golf_logo.png
tags : [ Vim, tricks, tools, Insert Mode]
---
{% include JB/setup %}

I've been using Vim for almost a year now, starting with the humble [:vimtutor](http://linuxcommand.org/man_pages/vimtutor1.html), then Googling questions and reading the manual.

I know Vim users almost exclusively, but I'm often surprised how few know about the various Insert Mode commands. 

They're incredibly useful; arguably, one of the drawbacks of Sublime Text 2's Vintage Mode, which is made to replicate Vim, is that it lacks these Insert Mode features. 

Here, in my opinion, are the essential eight commands for grokking Insert Mode.

##Navigation
- `CTRL + o`   breaks Insert Mode for one command and then returns the user to Insert Mode.

##Creating
- `CTRL + y`   copies the character in the above line. (This is among my favorites; I'm surprised by how often it's useful.)
- `CTRL + n`   completes the current word; uses suggestions from words  already in a file elsewhere in Vim. The file can be in a different buffer. 
- `CTRL + p`   does the same as above, scrolls through the completion list in the reverse direction.
- `CTRL + r`   pastes from a register. For example, `CTRL + r` followed by `%` pastes the title from the current file. Type `:reg` in Normal Mode to view all available registers.
- `CTRL + m`   creates a new line; also functions as `Enter` in a number of Unix programs, since keyboards on the original Unix system lacked an `Enter` key.
- `CTRL + t`   adds a tab at the beginning of the current line.

##Deleting
- `CTRL + w`   deletes the previous word.
- `CTRL + h`   is backspace by a different name; deletes the previous character.
- `CTRL + u`   deletes the current line to the cursor


Also, because it's useful everywhere, Insert Mode or elsewhere, I'll include this:


##Oft-forgotten escape sequences
- `CTRL + [`
- `CTRL + c`


Rarely do I actually touch the `<esc>` key. Perhaps among the best qualities of Vim is its redundancy. There are multiple ways to do the same thing, thus reducing the number of necessary keystrokes.
Hence, [VimGolf](http://vimgolf.com/), a community of individuals trying to solve challenges in the fewest number of keystrokes possible. 
